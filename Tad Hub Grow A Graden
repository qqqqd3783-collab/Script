local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HRP = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")


local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

WindUI:SetNotificationLower(true)

local Window = WindUI:CreateWindow({
    Title = "Tad Hub | Universe | 0.0.2",
    Icon = "door-open",
    Author = "By Tad Hub",
    Folder = "TadHub",
    Size = UDim2.fromOffset(550, 350),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})

Window:EditOpenButton({
    Title = "Tad Hub",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

Window:IsResizable(true)

Window:SetToggleKey(Enum.KeyCode.H)

local Tab = Window:Tab({
    Title = "Main",
    Icon = "bird",
    Locked = false,
})
local Section = Tab:Section({ 
    Title = "Status:",
    TextXAlignment = "Left",
    TextSize = 17,
})

local eventList = {
    "Skyroot Chest",
    "Griffin Statue",
    "Bouncy Mushroom",
    "Beanstalk Painting",
    "Can Of Beans",
    "Glowpod",
    "Flare Melon",
    "Pet Mutation Shard Giantbean",
    "Gnome"
}

local seedList = {
    "Carrot",
    "Potato",
    "Wheat",
    "Corn",
    "Tomato"
}

local gearList = {
    "Watering Can",
    "Hoe",
    "Axe",
    "Pickaxe",
    "Fishing Rod"
}

local eggList = {
    "Common Egg",
    "Uncommon Egg",
    "Rare Egg",
    "Legendary Egg"
}

local selectedEvents = {}
local selectedSeeds = {}
local selectedGears = {}
local selectedEggs = {}
local autoBuyEnabled = false
local autoBuyThread

local Toggle = Tab:Toggle({
    Title = "Auto Buy",
    Desc = "เปิด/ปิดการซื้ออัตโนมัติ (Event + Seed + Gear + Egg)",
    Icon = "repeat",
    Default = false,
    Callback = function(state)
        autoBuyEnabled = state
        print("Auto Buy: " .. tostring(state))

        if state then
            autoBuyThread = task.spawn(function()
                while autoBuyEnabled do
                    task.wait(1)

                    for _, ev in ipairs(selectedEvents) do
                        local args = { [1] = ev }
                        game:GetService("ReplicatedStorage").GameEvents.BuyEventShopStock:FireServer(unpack(args))
                    end

                    for _, seed in ipairs(selectedSeeds) do
                        local args = { [1] = seed }
                        game:GetService("ReplicatedStorage").GameEvents.BuySeedStock:FireServer(unpack(args))
                    end

                    for _, gear in ipairs(selectedGears) do
                        local args = { [1] = gear }
                        game:GetService("ReplicatedStorage").GameEvents.BuyGearStock:FireServer(unpack(args))
                    end

                    for _, egg in ipairs(selectedEggs) do
                        local args = { [1] = egg }
                        game:GetService("ReplicatedStorage").GameEvents.BuyPetEgg:FireServer(unpack(args))
                    end
                end
            end)
        else
            if autoBuyThread then
                task.cancel(autoBuyThread)
                autoBuyThread = nil
            end
        end
    end
})

local EventDropdown = Tab:Dropdown({
    Title = "เลือก Event (Multi)",
    Values = eventList,
    Value = { eventList[1] },
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedEvents = options
        print("เลือก Event: " .. game:GetService("HttpService"):JSONEncode(options))
    end
})

local SeedDropdown = Tab:Dropdown({
    Title = "เลือกเมล็ด (Multi)",
    Values = seedList,
    Value = { seedList[1] },
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedSeeds = options
        print("เลือกเมล็ด: " .. game:GetService("HttpService"):JSONEncode(options))
    end
})

local GearDropdown = Tab:Dropdown({
    Title = "เลือก Gear (Multi)",
    Values = gearList,
    Value = { gearList[1] },
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedGears = options
        print("เลือก Gear: " .. game:GetService("HttpService"):JSONEncode(options))
    end
})

local EggDropdown = Tab:Dropdown({
    Title = "เลือก Egg (Multi)",
    Values = eggList,
    Value = { eggList[1] },
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedEggs = options
        print("เลือก Egg: " .. game:GetService("HttpService"):JSONEncode(options))
    end
})

local Tab2 = Window:Tab({
    Title = "Auto Check",
    Icon = "search"
})

local function getNextCheckTime()
    local now = os.time()
    local date = os.date("!*t", now)
    date.min = 0
    date.sec = 10
    date.hour = date.hour + 1
    return os.time(date)
end

local Toggle = Tab2:Toggle({
    Title = "Auto Sell (Real Clock)",
    Desc = "ตรวจสอบทุกชั่วโมง +10วิ ตามนาฬิกาจริง",
    Default = false,
    Callback = function(state)
        getgenv().AutoSell = state
        if state then
            task.spawn(function()
                local lastKeyword = nil
                local nextCheck = getNextCheckTime()

                while getgenv().AutoSell do
                    local now = os.time()
                    if now >= nextCheck then
                        local success, traitLabel = pcall(function()
                            return workspace.BeanstalkEvent:GetChildren()[10].Jack.BeanstalkBubblePart.BeanstalkBillboard.BG.TraitTextLabel
                        end)

                        if success and traitLabel and traitLabel.Text then
                            local text = traitLabel.Text
                            local keyword = string.match(text, ">([%w%s]+)<") or text

                            if lastKeyword and keyword ~= lastKeyword then
                                local player = game.Players.LocalPlayer
                                if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                                    local hrp = player.Character.HumanoidRootPart
                                    local oldCFrame = hrp.CFrame

                                    hrp.CFrame = CFrame.new(86.59, 3.00, 0.43)
                                    task.wait(0.5)

                                    game:GetService("ReplicatedStorage").GameEvents.Sell_Inventory:FireServer()

                                    task.wait(0.5)

                                    hrp.CFrame = oldCFrame

                                    WindUI:Notify({
                                        Title = "💰 Auto Sell",
                                        Content = "ขายของเรียบร้อย (ข้อความเปลี่ยนเป็น: " .. keyword .. ")",
                                        Icon = "check",
                                        Duration = 5
                                    })
                                end
                            end

                            lastKeyword = keyword
                        end

                        nextCheck = getNextCheckTime()
                    end

                    task.wait(1)
                end
            end)
        end
    end
})
